/Users/aafraneokese/Documents/Learn IoS Features/Functionality/Architecture /MVVM Example/LoginDemo/LoginDemoTests/ChectTests.swift:
    1|       |//
    2|       |//  ChectTests.swift
    3|       |//  LoginDemoTests
    4|       |//
    5|       |//  Created by Akua Afrane-Okese on 2020/03/07.
    6|       |//  Copyright © 2020 Akua Afrane-Okese. All rights reserved.
    7|       |//
    8|       |
    9|       |import XCTest
   10|       |@testable import LoginDemo
   11|       |class ChectTests: XCTestCase {
   12|       |
   13|      0|    override func setUp() {
   14|      0|        super.setUp()
   15|      0|        let sut = UIStoryboard(name: "Main", bundle: nil).instantiateInitialViewController() as? LoginViewController
   16|      0|        
   17|      0|        UIApplication.shared.keyWindow!.rootViewController = sut
   18|      0|        
   19|      0|        // The One Weird Trick!
   20|      0|        
   21|      0|        let _ = sut?.view
   22|      0|       
   23|      0|        //XCTAssertNotNil(sut?.view)
   24|      0|    }
   25|       |
   26|      0|    override func tearDown() {
   27|      0|        // Put teardown code here. This method is called after the invocation of each test method in the class.
   28|      0|    }
   29|       |
   30|      0|    func testExample() {
   31|      0|        // This is an example of a functional test case.
   32|      0|        // Use XCTAssert and related functions to verify your tests produce the correct results.
   33|      0|    }
   34|       |
   35|      0|    func testPerformanceExample() {
   36|      0|        // This is an example of a performance test case.
   37|      0|        self.measure {
   38|      0|            // Put the code you want to measure the time of here.
   39|      0|        }
   40|      0|    }
   41|       |
   42|       |}

/Users/aafraneokese/Documents/Learn IoS Features/Functionality/Architecture /MVVM Example/LoginDemo/LoginDemoTests/LoginDemoTests.swift:
    1|       |//
    2|       |//  LoginDemoTests.swift
    3|       |//  LoginDemoTests
    4|       |//
    5|       |//  Created by Akua Afrane-Okese on 2020/02/08.
    6|       |//  Copyright © 2020 Akua Afrane-Okese. All rights reserved.
    7|       |//
    8|       |
    9|       |import XCTest
   10|       |@testable import LoginDemo
   11|       |
   12|       |
   13|       |
   14|       |struct MockRepo: UserModelProtocol {
   15|      0|    func addUser(with firstName: String, lastName: String, email: String, and password: String, complete: @escaping (String) -> Void) {
   16|      0|        if (password != "Test&Password") {
   17|      0|            print("Result \(password)")
   18|      0|            complete("false")
   19|      0|        }
   20|      0|        complete("true")
   21|      0|    }
   22|       |    
   23|      0|    func loginUser(with email: String, and password: String, complete: @escaping ( _ error: String)->Void) {
   24|      0|        if (password != "Test&Password") {
   25|      0|            complete("false")
   26|      0|        }
   27|      0|        complete("true")
   28|      0|    }
   29|       |}
   30|       |
   31|       |class LoginDemoTests: XCTestCase {
   32|       |    
   33|       |    var user: User!
   34|       |    var repo : UserModelProtocol!
   35|      1|    override func setUp() {
   36|      1|         user = User(firstName: "Kim", lastName: "Possible", email: "kim@p.com", password: "CallMeMeetMe")
   37|      1|        repo = User(firstName: "TestName", lastName: "TestSurname", email: "TestEmail", password: "Test&Password")
   38|      1|    }
   39|       |
   40|      1|    override func tearDown() {
   41|      1|        // Put teardown code here. This method is called after the invocation of each test method in the class.
   42|      1|    }
   43|       |
   44|      0|    func testGivenInitialValuesReturnSuccess() {
   45|      0|       
   46|      0|        XCTAssertNotNil(user)
   47|      0|        XCTAssertEqual(user.firstName, "Kim")
   48|      0|        XCTAssertEqual(user.lastName, "Possible")
   49|      0|        XCTAssertEqual(user.email, "kim@p.com")
   50|      0|        XCTAssertEqual(user.password, "CallMeMeetMe")
   51|      0|        XCTAssertNotEqual(user.firstName, "Kimmy")
   52|      0|        XCTAssertNotEqual(user.lastName, "Impossible")
   53|      0|        XCTAssertNotEqual(user.email, "kimmy@p.com")
   54|      0|        XCTAssertNotEqual(user.password, "If")
   55|      0|    }
   56|       |
   57|      0|    func testGivenSignUpValuesReturnSuccess() {
   58|      0|        /*let closure = user.addUser(with: user.firstName, lastName: user.lastName, email: user.email, and: user.password){(result) in
   59|      0|        }*/
   60|      0|        let closure = repo.addUser(with: user.firstName, lastName: user.lastName, email: user.email, and: user.password){(result) in
   61|      0|        }
   62|      0|        XCTAssertNotNil(closure)
   63|      0|    }
   64|      1|    func testGivenSignUpValuesReturn() {
   65|      1|        let exp = expectation(description: "Check Login is successful")
   66|      0|        repo.addUser(with: user.firstName, lastName: user.lastName, email: user.email, and: "user.password"){(result) in
   67|      0|            
   68|      0|            XCTAssertNil(result)
   69|      1|        }
   70|      1|        
   71|      0|    }
   72|      0|    func testGivenLoginValuesReturnSuccess() {
   73|      0|        let closure = repo.loginUser(with: user.email, and: user.password){(result) in
   74|      0|        }
   75|      0|        XCTAssertNotNil(closure)
   76|       |    }
   77|       |   /* func testLoginSuccess() {
   78|       |
   79|       |        // other setup
   80|       |
   81|       |        let user = User(firstName: "Kim", lastName: "Possible", email: "kim@p.com", password: "CallMeMeetMe")
   82|       |
   83|       |        let result = user.loginUser(with: "kim@p.com", and: "CallMeMeetMe") { (loginRes) in
   84|       |            loginResult = loginRes
   85|       |            exp.fulfill()
   86|       |        }
   87|       |
   88|       |        waitForExpectations(timeout: 10) { error in
   89|       |            if let error = error {
   90|       |                XCTFail("waitForExpectationsWithTimeout errored: \(error)")
   91|       |            }
   92|       |            XCTAssertEqual(loginResult, true)
   93|       |        }
   94|       |    }*/
   95|      0|    
   96|      0|    func testPerformanceExample() {
   97|      0|        // This is an example of a performance test case.
   98|      0|        self.measure {
   99|      0|            // Put the code you want to measure the time of here.
  100|      0|        }
  101|       |    }
  102|       |
  103|       |}

/Users/aafraneokese/Documents/Learn IoS Features/Functionality/Architecture /MVVM Example/LoginDemo/LoginDemoTests/UserViewModelUnitTests.swift:
    1|       |//
    2|       |//  UserViewModelUnitTests.swift
    3|       |//  LoginDemoTests
    4|       |//
    5|       |//  Created by Akua Afrane-Okese on 2020/03/06.
    6|       |//  Copyright © 2020 Akua Afrane-Okese. All rights reserved.
    7|       |//
    8|       |
    9|       |import XCTest
   10|       |@testable import LoginDemo
   11|       |
   12|       |
   13|       |
   14|       |class UserViewModelUnitTests: XCTestCase {
   15|       |
   16|       |    var sut: LoginViewController?
   17|       |    var vv: ViewController?
   18|       |    var user: User!
   19|      0|    override func setUp() {
   20|      0|       
   21|      0|        sut = UIStoryboard(name: "Main", bundle: nil).instantiateInitialViewController() as? LoginViewController
   22|      0|        vv = UIStoryboard(name: "Main", bundle: nil).instantiateInitialViewController() as? ViewController
   23|      0|    }
   24|       |
   25|      0|    override func tearDown() {
   26|      0|        // Put teardown code here. This method is called after the invocation of each test method in the class.
   27|      0|    }
   28|       |
   29|      0|    func testView() {
   30|      0|        
   31|      0|    }
   32|      0|    func testWork(){
   33|      0|        guard let sut = sut else { return }
   34|      0|        print("My daughters name")
   35|      0|        sut.emailTextField.text = ""
   36|      0|        sut.passwordTextField.text = ""
   37|      0|        let result = sut.validateField()
   38|      0|        XCTAssertNil(result)
   39|      0|    }
   40|       |    
   41|      0|    func testExample() {
   42|      0|         guard let sut = sut else { return }
   43|      0|        sut.errorLabel.text = ""
   44|      0|        sut.showError("String")
   45|      0|    }
   46|       |
   47|       |   
   48|       |    
   49|      0|    func testPerformanceExample() {
   50|      0|        // This is an example of a performance test case.
   51|      0|        self.measure {
   52|      0|            // Put the code you want to measure the time of here.
   53|      0|        }
   54|      0|    }
   55|       |
   56|       |}

/Users/aafraneokese/Documents/Learn IoS Features/Functionality/Architecture /MVVM Example/LoginDemo/LoginDemoTests/UtilitiesUnitTests.swift:
    1|       |//
    2|       |//  UtilitiesUnitTests.swift
    3|       |//  LoginDemoTests
    4|       |//
    5|       |//  Created by Akua Afrane-Okese on 2020/03/05.
    6|       |//  Copyright © 2020 Akua Afrane-Okese. All rights reserved.
    7|       |//
    8|       |
    9|       |import XCTest
   10|       |@testable import LoginDemo
   11|       |
   12|       |class UtilitiesUnitTest: XCTestCase {
   13|       |
   14|      0|    override func setUp() {
   15|      0|        // Put setup code here. This method is called before the invocation of each test method in the class.
   16|      0|        
   17|      0|    }
   18|       |
   19|      0|    override func tearDown() {
   20|      0|        // Put teardown code here. This method is called after the invocation of each test method in the class.
   21|      0|    }
   22|       |
   23|      0|    func testGivenIncorrectPasswordReturnFalse() {
   24|      0|        XCTAssertFalse(Utilities.isPasswordValid(""))
   25|      0|    }
   26|       |    
   27|      0|    func testGivenCorrectPasswordReturnTrue() {
   28|      0|        XCTAssertTrue(Utilities.isPasswordValid("HelloWorld@"))
   29|      0|    }
   30|       |
   31|      0|    func testPerformanceExample() {
   32|      0|        // This is an example of a performance test case.
   33|      0|        self.measure {
   34|      0|            // Put the code you want to measure the time of here.
   35|      0|        }
   36|      0|    }
   37|       |
   38|       |}

